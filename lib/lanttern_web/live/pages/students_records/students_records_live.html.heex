<div>
  <.header_nav current_user={@current_user}>
    <:title><%= gettext("Students records") %></:title>
    <div class="flex items-center gap-4 p-4">
      <p class="flex-1 flex flex-wrap gap-2">
        <%= ngettext(
          "Showing 1 result for",
          "Showing %{count} results for",
          @students_records_length
        ) %>
        <%= if @selected_students != [] do %>
          <.badge
            :for={student <- @selected_students}
            on_remove={JS.push("remove_student_filter")}
            theme="primary"
          >
            <%= student.name %>
          </.badge>
        <% else %>
          <.badge><%= gettext("all students") %></.badge>
        <% end %>
        ,
        <%= if @selected_classes != [] do %>
          <.badge
            :for={class <- @selected_classes}
            on_remove={JS.push("remove_class_filter", value: %{"id" => class.id})}
            theme="primary"
          >
            <%= class_with_cycle(class, @current_user) %>
          </.badge>
        <% else %>
          <.badge><%= gettext("all classes") %></.badge>
        <% end %>,
        <%= if @selected_student_record_types != [] do %>
          <.badge
            :for={type <- @selected_student_record_types}
            color_map={type}
            on_remove={JS.push("remove_type_filter")}
          >
            <%= type.name %>
          </.badge>
        <% else %>
          <.badge><%= gettext("all student record types") %></.badge>
        <% end %>
        <%= gettext("and") %>
        <%= if @selected_student_record_statuses != [] do %>
          <.badge
            :for={status <- @selected_student_record_statuses}
            color_map={status}
            on_remove={JS.push("remove_status_filter")}
          >
            <%= status.name %>
          </.badge>
        <% else %>
          <.badge><%= gettext("all statuses") %></.badge>
        <% end %>
      </p>
      <.action
        type="link"
        patch={~p"/students_records?student_record=new"}
        icon_name="hero-plus-circle-mini"
      >
        <%= gettext("New student record") %>
      </.action>
    </div>
  </.header_nav>
</div>
<.students_records_data_grid
  id="students-records"
  stream={@streams.students_records}
  show_empty_state_message={@students_records_length == 0}
  row_click={
    fn student_record ->
      JS.patch(~p"/students_records?student_record=#{student_record.id}")
    end
  }
  is_students_filter_active={@selected_students_ids != []}
  on_students_filter={JS.push("open_student_search_modal")}
  is_classes_filter_active={@selected_classes_ids != []}
  on_classes_filter={JS.exec("data-show", to: "#students-records-classes-filters-overlay")}
  is_type_filter_active={@selected_student_record_types_ids != []}
  on_type_filter={JS.exec("data-show", to: "#student-record-types-filter-modal")}
  is_status_filter_active={@selected_student_record_statuses_ids != []}
  on_status_filter={JS.exec("data-show", to: "#student-record-statuses-filter-modal")}
  current_user_or_cycle={@current_user}
/>
<div :if={@has_next} class="flex justify-center pb-10">
  <.button theme="ghost" phx-click="load_more" class="mt-6">
    <%= gettext("Load more records") %>
  </.button>
</div>
<.modal
  :if={@show_student_search_modal}
  id="student-search-modal"
  show
  on_cancel={JS.push("close_student_search_modal")}
>
  <h5 class="mb-10 font-display font-black text-xl">
    <%= gettext("Filter records by student") %>
  </h5>
  <form>
    <.live_component
      module={StudentSearchComponent}
      id="student-search-modal-search"
      notify_parent
      label={gettext("Type the name of the student")}
    />
  </form>
</.modal>
<.live_component
  module={LantternWeb.Filters.ClassesFilterOverlayComponent}
  id="students-records-classes-filters-overlay"
  current_user={@current_user}
  title={gettext("Filter students records by class")}
  navigate={~p"/students_records"}
  classes={@classes}
  selected_classes_ids={@selected_classes_ids}
/>
<.single_selection_filter_modal
  id="student-record-types-filter-modal"
  title={gettext("Filter students records by type")}
  use_color_map_as_active
  items={@student_record_types}
  selected_item_id={Enum.at(@selected_student_record_types_ids, 0)}
  on_cancel={%JS{}}
  on_select={
    fn id ->
      JS.push("filter_by_type", value: %{"id" => id})
      |> JS.exec("data-cancel", to: "#student-record-types-filter-modal")
    end
  }
/>
<.single_selection_filter_modal
  id="student-record-statuses-filter-modal"
  title={gettext("Filter students records by status")}
  use_color_map_as_active
  items={@student_record_statuses}
  selected_item_id={Enum.at(@selected_student_record_statuses_ids, 0)}
  on_cancel={%JS{}}
  on_select={
    fn id ->
      JS.push("filter_by_status", value: %{"id" => id})
      |> JS.exec("data-cancel", to: "#student-record-statuses-filter-modal")
    end
  }
/>
<.live_component
  module={StudentRecordOverlayComponent}
  student_record_id={@student_record_id}
  id="student-record-overlay"
  current_user={@current_user}
  on_cancel={JS.patch(~p"/students_records")}
  notify_parent
/>
