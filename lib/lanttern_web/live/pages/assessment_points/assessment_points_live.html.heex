<.responsive_container class="pt-6 sm:pt-10">
  <.page_title_with_menu>Assessment points explorer</.page_title_with_menu>
  <div class="mt-12">
    <p class="font-display font-bold text-lg">
      I want to explore assessment points<br /> in
      <.filter_buttons type="subjects" items={@current_subjects} />, from
      <.filter_buttons type="classes" items={@current_classes} />
    </p>
  </div>
</.responsive_container>
<.responsive_container class="mt-10">
  <div class="flex items-center gap-4 justify-between">
    <div class="flex items-center gap-4 text-sm">
      <p class="flex items-center gap-2">
        Showing <%= length(@assessment_points) %> results
      </p>
    </div>
    <.collection_action
      type="link"
      patch={~p"/assessment_points/new"}
      icon_name="hero-plus-circle"
    >
      Create assessment point
    </.collection_action>
  </div>
</.responsive_container>
<div class="px-6 pb-10">
  <div
    id="assessment-points-explorer-slider"
    class="relative w-full max-h-screen pb-6 mt-6 rounded shadow-xl bg-white overflow-x-auto"
    phx-hook="Slider"
  >
    <%= if length(@assessment_points) > 0 do %>
      <div class="sticky top-0 z-20 flex items-stretch gap-4 pr-6 mb-2 bg-white">
        <div class="sticky left-0 z-20 shrink-0 w-40 bg-white"></div>
        <.assessment_point :for={ap <- @assessment_points} assessment_point={ap} />
        <div class="shrink-0 w-2"></div>
      </div>
      <.student_and_entries
        :for={{student, entries} <- @students_and_entries}
        student={student}
        entries={entries}
      />
    <% else %>
      <.empty_state>No assessment points found</.empty_state>
    <% end %>
  </div>
</div>
<.slide_over id="explorer-filters">
  <:title>Filter Assessment Points</:title>
  <.form id="explorer-filters-form" for={@form} phx-submit={filter()} class="flex gap-6">
    <fieldset class="flex-1">
      <legend class="text-base font-semibold leading-6 text-ltrn-subtle">Classes</legend>
      <div class="mt-4 divide-y divide-ltrn-lighter border-b border-t border-ltrn-lighter">
        <.check_field
          :for={opt <- @classes}
          id={"class-#{opt.id}"}
          field={@form[:classes_ids]}
          opt={opt}
        />
      </div>
    </fieldset>
    <fieldset class="flex-1">
      <legend class="text-base font-semibold leading-6 text-ltrn-subtle">Subjects</legend>
      <p class="my-4 text-sm font-semibold text-ltrn-subtle">Used in assessment points</p>
      <div class="divide-y divide-ltrn-lighter border-b border-t border-ltrn-lighter">
        <.check_field
          :for={opt <- @subjects_in_assessments}
          id={"subject-#{opt.id}"}
          field={@form[:subjects_ids]}
          opt={opt}
        />
      </div>
      <p class="my-4 text-sm font-semibold text-ltrn-subtle">Others</p>
      <div class="divide-y divide-ltrn-lighter border-b border-t border-ltrn-lighter">
        <.check_field
          :for={opt <- @other_subjects}
          id={"subject-#{opt.id}"}
          field={@form[:subjects_ids]}
          opt={opt}
        />
      </div>
    </fieldset>
  </.form>
  <:actions_left>
    <.button type="button" theme="ghost" phx-click={clear_filters()}>
      Clear filters
    </.button>
  </:actions_left>
  <:actions>
    <.button
      type="button"
      theme="ghost"
      phx-click={JS.exec("data-cancel", to: "#explorer-filters")}
    >
      Cancel
    </.button>
    <.button type="submit" form="explorer-filters-form" phx-disable-with="Applying filters...">
      Apply filters
    </.button>
  </:actions>
</.slide_over>
<.slide_over
  :if={@live_action == :new}
  id="create-assessment-point-overlay"
  show={true}
  on_cancel={JS.patch(~p"/assessment_points")}
>
  <:title>Create assessment point</:title>
  <.live_component module={AssessmentPointCreateFormComponent} id={:new} />
  <:actions>
    <.button
      type="button"
      theme="ghost"
      phx-click={JS.exec("data-cancel", to: "#create-assessment-point-overlay")}
    >
      Cancel
    </.button>
    <.button type="submit" form="create-assessment-point-form" phx-disable-with="Saving...">
      Save
    </.button>
  </:actions>
</.slide_over>
